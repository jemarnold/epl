% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_outliers.R
\name{replace_outliers}
\alias{replace_outliers}
\title{Replace Local Outliers}
\usage{
replace_outliers(x, width, method = c("median", "NA"), t0 = 3)
}
\arguments{
\item{x}{A numeric vector.}

\item{width}{An integer defining the sample window in which to detect local
outliers. Where \verb{window = -width < idx < width}.}

\item{method}{A character string indicating how to handle replacement
(see \emph{Details} for more on each method):
\describe{
\item{\code{"median"}}{Replaces outliers with the median within a locally
centred window defined by \code{width} (the default).}
\item{\code{"NA"}}{Replaces outliers with \code{NA}.}
}}

\item{t0}{An integer for the local outlier threshold. Default \code{t0 = 3}
(Pearson's rule; analogous to 3Ïƒ rule).}
}
\value{
A numeric vector of filtered data.
}
\description{
Detects local outliers in vector data with a Hampel filter using median
absolute deviation (MAD), and replaces with \code{NA} or the local median value.
}
\details{
The default \code{method = "median"} will replace outliers with the local median
value, as in \code{\link[pracma:hampel]{pracma::hampel()}}. Otherwise, \code{method = "NA"} will
replace outliers with \code{NA}.

This function will pass through any missing \code{NA} values in the input vector
\code{x}. \code{NA} values in \code{x} are excluded from processing and restored in the
returned vector, but not replaced with the local median value.

A high \code{t0} threshold makes the outlier filter more forgiving, a low one
will declare more points to be outliers. \code{t0 = 3} (the default)
corresponds to Pearson's 3 sigma edit rule, \code{t0 = 0} to Tukey's median
filter.
}
\examples{
tyme_data <- read_tymewear(example_epl("tymewear_live"))$data
vt_filtered <- replace_outliers(tyme_data$vt, width = 7, method = "median")

\dontrun{
ggplot(tyme_data) +
    aes(x = time, y = vt) +
    ylab("Tidal Volume (L)") +
    scale_x_continuous(
        name = "Time (mm:ss)",
        breaks = breaks_timespan(),
        labels = format_hmmss
    ) +
    scale_colour_epl() +
    geom_line(aes(colour = "BR")) +
    geom_point(
        data = slice(tyme_data, which(vt_filtered != vt)),
        aes(y = vt, colour = "outliers")
    )
}

}
\seealso{
\code{\link[pracma:hampel]{pracma::hampel()}}
}
